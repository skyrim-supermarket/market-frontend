'use strict';

Object.defineProperty(exports, "__esModule", {
		value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Evaluates environment available from the current scope and returns env object.
 * Helper method created to facilitate testing.
 */
var evaluate = exports.evaluate = function evaluate() {
		var _this = this;

		var enverse = {};

		Object.defineProperty(enverse, 'is', {
				writable: false,
				value: {
						server: function () {
								try {
										return _this === _this.global;
								} catch (e) {
										return false;
								}
						}(),
						browser: function () {
								try {
										return _this === _this.window;
								} catch (e) {
										return false;
								}
						}()
				}
		});

		Object.defineProperty(enverse, 'has', {
				writable: false,
				value: {
						window: _typeof(this.window) === 'object',
						document: _typeof(this.document) === 'object',
						navigator: _typeof(this.navigator) === 'object',
						localStorage: _typeof(this.localStorage) === 'object',
						sessionStorage: _typeof(this.sessionStorage) === 'object',
						global: _typeof(this.global) === 'object',
						process: _typeof(this.process) === 'object'
				}
		});

		return enverse;
};

// Evaluate environment from global (server) or window (browser) level
var env = evaluate.call(new Function('return this')());
exports.default = env;