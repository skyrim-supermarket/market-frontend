'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isAuthenticated = exports.getAuthHeader = exports.removeToken = exports.getToken = exports.setToken = undefined;

var _storage = require('./internals/storage');

var _storage2 = _interopRequireDefault(_storage);

var _config = require('./internals/config');

var _config2 = _interopRequireDefault(_config);

var _utils = require('./internals/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var setToken = exports.setToken = function setToken(token) {
    return _storage2.default.set(_config2.default.tokenName, token);
};

var getToken = exports.getToken = function getToken() {
    var asJSON = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    var token = _storage2.default.get(_config2.default.tokenName);
    if (asJSON) return (0, _utils.parseJWT)(token);
    return token;
};

var removeToken = exports.removeToken = function removeToken() {
    _storage2.default.remove(_config2.default.tokenName);
};

var getAuthHeader = exports.getAuthHeader = function getAuthHeader() {
    var token = void 0;
    if (isAuthenticated() && _config2.default.authHeader && _config2.default.authToken) {
        var _token = _config2.default.authToken + ' ' + getToken();
        return _defineProperty({}, _config2.default.authHeader, _token);
    }
    return {};
};

var isAuthenticated = exports.isAuthenticated = function isAuthenticated() {
    var token = (0, _utils.parseJWT)(getToken());
    if (!token) return false;

    var exp = token.payload.exp;
    if (!exp) return true;

    var isExpTimestamp = typeof exp === 'number';
    if (!isExpTimestamp) return false;
    return Math.round(new Date().getTime() / 1000) < exp;
};